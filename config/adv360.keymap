#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

&mt {
    flavor = "tap-preferred";
    quick-tap-ms = <200>;
    require-prior-idle-ms = <125>;
};

/ {
    behaviors {
        #include "macros.dtsi"
      #include "version.dtsi"
      #ifndef VERSION_MACRO

        macro_ver: macro_ver {
            compatible = "zmk,behavior-macro";
            label = "macro_version";
            #binding-cells = <0>;
            bindings = <&kp RET>;
        };

        #endif

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <350>;
            quick-tap-ms = <300>;
            require-prior-idle-ms = <300>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        spl: spl_layer_mod {
            compatible = "zmk,behavior-hold-tap";
            label = "SPL_LAYER_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <350>;
            quick-tap-ms = <300>;
            require-prior-idle-ms = <300>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&kp>;
        };

        td_mt_0: tap_dance_mt_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "td_mt_0";
            #binding-cells = <0>;
            bindings = <&mt LCMD BACKSPACE>, <&kp BACKSPACE>;

            tapping-term-ms = <310>;
        };

     };

    combos {
        compatible = "zmk,combos";

        wm_bspce_1 {
            bindings = <&kp LG(N1)>;
            key-positions = <65 29>;
            layers = <0>;
        };

        wm_bspce_2 {
            bindings = <&kp LG(N2)>;
            key-positions = <65 30>;
            layers = <0>;
        };

        wm_bspce_3 {
            bindings = <&kp LG(NUMBER_3)>;
            key-positions = <65 31>;
            layers = <0>;
        };

        wm_bspce_4 {
            bindings = <&kp LG(NUMBER_4)>;
            key-positions = <65 32>;
            layers = <0>;
        };

        wm_bspce_5 {
            bindings = <&kp LG(N5)>;
            key-positions = <65 33>;
            layers = <0>;
        };

        wm_spce_6 {
            bindings = <&kp LG(NUMBER_6)>;
            key-positions = <70 40>;
            layers = <0>;
        };

        wm_spce_7 {
            bindings = <&kp LG(N7)>;
            key-positions = <70 41>;
            layers = <0>;
        };

        wm_spce_8 {
            bindings = <&kp LG(N8)>;
            key-positions = <70 42>;
            layers = <0>;
        };

        wm_spce_9 {
            bindings = <&kp LG(N9)>;
            key-positions = <70 43>;
            layers = <0>;
        };

        wm_spce_bslash {
            bindings = <&kp LG(TAB)>;
            key-positions = <70 27>;
            layers = <0>;
        };

        wm_bspce_tab {
            bindings = <&kp LG(TAB)>;
            key-positions = <65 14>;
            layers = <0>;
        };
    };

    macros {
        /**
         * Temporarily switches to a layer (`&mo`) while a modifier is held.
         * Analogous to QMK's `LM()`, using a parameterized macro.
         *
         * Params:
         *  1. Layer to switch to
         *  2. Modifier to press while layer is active
         *
         * Example:
         *  `&lm NUM_LAYER LSHIFT`
         */
         lm: lm {
             compatible = "zmk,behavior-macro-two-param";
             wait-ms = <0>;
             tap-ms = <0>;
             #binding-cells = <2>;
             bindings
                 = <&macro_param_1to1>
                 , <&macro_press &mo MACRO_PLACEHOLDER>
                 , <&macro_param_2to1>
                 , <&macro_press &kp MACRO_PLACEHOLDER>
                 , <&macro_pause_for_release>
                 , <&macro_param_2to1>
                 , <&macro_release &kp MACRO_PLACEHOLDER>
                 , <&macro_param_1to1>
                 , <&macro_release &mo MACRO_PLACEHOLDER>
                 ;
         };
         lmsl: lmsl {
             compatible = "zmk,behavior-macro-two-param";
             wait-ms = <0>;
             tap-ms = <0>;
             #binding-cells = <2>;
             bindings
                 = <&macro_param_1to1>
                 , <&macro_press &sl MACRO_PLACEHOLDER>
                 , <&macro_param_2to1>
                 , <&macro_press &sk MACRO_PLACEHOLDER>
                 ;
         };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp EQUAL         &kp N1       &kp N2          &kp N3      &kp N4        &kp N5  &tog 1                                                         &mo 3         &kp N6  &kp N7        &kp N8      &kp N9           &kp N0               &kp MINUS
&kp TAB           &kp Q        &kp W           &kp E       &kp R         &kp T   &none                                                          &trans        &kp Y   &kp U         &kp I       &kp O            &kp P                &kp BSLH
&mt LCTRL ESCAPE  &hm LCTRL A  &hm LEFT_ALT S  &hm LCMD D  &hm LSHIFT F  &kp G   &lmsl 5 LCMD        &mo 4    &sk LALT      &kp LCMD   &mo 4      &lm 5 LCMD    &kp H   &hm RSHIFT J  &hm RCMD K  &hm RIGHT_ALT L  &hm RCTRL SEMICOLON  &kp SQT
&kp LSHFT         &kp Z        &kp X           &kp C       &kp V         &kp B                              &kp HOME      &kp PG_UP                           &kp N   &kp M         &kp COMMA   &kp DOT          &kp FSLH             &kp RSHFT
&mo 2             &kp GRAVE    &kp CAPS        &kp LEFT    &kp RIGHT             &spl 4 BACKSPACE  &kp DEL  &kp END       &kp PG_DN  &kp ENTER  &spl 4 SPACE          &kp UP        &kp DOWN    &kp LBKT         &kp RBKT             &mo 2
            >;
        };

        keypad {
            bindings = <
&kp EQUAL  &kp N1     &kp N2    &kp N3    &kp N4     &kp N5  &trans                                                   &mo 3      &kp N6  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp MINUS
&kp TAB    &kp Q      &kp W     &kp E     &kp R      &kp T   &none                                                    &none      &kp Y   &kp KP_N7   &kp KP_N8     &kp KP_N9      &kp KP_MINUS     &kp BSLH
&kp ESC    &kp A      &kp S     &kp D     &kp F      &kp G   &none     &kp LCTRL  &kp LALT      &kp LGUI   &kp RCTRL  &none      &kp H   &kp KP_N4   &kp KP_N5     &kp KP_N6      &kp KP_PLUS      &kp SQT
&kp LSHFT  &kp Z      &kp X     &kp C     &kp V      &kp B                        &kp HOME      &kp PG_UP                        &kp N   &kp KP_N1   &kp KP_N2     &kp KP_N3      &kp KP_ENTER     &kp RSHFT
&mo 2      &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT          &kp BSPC  &kp DEL    &kp END       &kp PG_DN  &kp ENTER  &kp KP_N0          &kp UP      &kp DOWN      &kp KP_DOT     &kp RBKT         &mo 2
            >;
        };

        fn {
            bindings = <
&kp F1   &kp F2       &kp F3       &kp F4        &kp F5              &kp F6            &tog 1                                          &mo 3             &kp F7    &kp F8           &kp F9             &kp F10          &kp F11     &kp F12
&kp F11  &kp F1       &kp F2       &kp F3        &kp F4              &kp F5            &none                                           &none             &kp F6    &kp F7           &kp F8             &kp F9           &kp F10     &kp F12
&trans   &kp C_PAUSE  &kp INS      &kp C_VOL_DN  &kp C_VOL_UP        &kp C_MUTE        &none   &trans      &trans      &trans  &trans  &trans            &kp HOME  &kp PAGE_DOWN    &kp PAGE_UP        &kp END          &kp C_MENU  &trans
&trans   &kp C_SLEEP  &kp C_POWER  &kp C_REWIND  &kp C_FAST_FORWARD  &kp C_PLAY_PAUSE                      &trans      &trans                            &trans    &kp C_BRI_DEC    &kp C_BRI_UP       &kp PRINTSCREEN  &trans      &trans
&trans   &trans       &trans       &kp C_PREV    &kp C_NEXT                            &trans  &kp C_MUTE  &trans      &trans  &trans  &kp C_PLAY_PAUSE            &kp C_VOLUME_UP  &kp C_VOLUME_DOWN  &kp C_PREVIOUS   &kp C_NEXT  &trans
            >;
        };

        mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                  &trans                  &none  &none       &none       &none          &none   &none
&none  &none         &none         &trans        &none         &none         &bootloader                                            &bootloader             &none  &none       &none       &none          &trans  &none
&none  &none         &kp C_SLEEP   &none         &none         &none         &none        &none  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none  &none       &none       &kp C_AL_LOCK  &none   &none
&none  &none         &none         &none         &macro_ver    &none                             &none      &none                                           &none  &none       &none       &none          &none   &none
&none  &none         &none         &none         &none                       &none        &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                &bl BL_INC  &bl BL_DEC  &none          &none   &none
            >;
        };

        special_layer {
            bindings = <
&kp EQUAL        &kp N1          &kp N2             &kp N3              &kp N4           &kp N5    &tog 1                                                           &mo 3      &kp N6     &kp N7           &kp N8       &kp N9               &kp N0           &kp MINUS
&kp TAB          &kp N1          &kp N2             &kp N3              &kp N4           &kp N5    &none                                                            &trans     &kp N6     &kp N7           &kp N8       &kp N9               &kp N0           &kp BSLH
&mt LCTRL CARET  &hm LCTRL LBKT  &hm LEFT_ALT RBKT  &hm LCMD LPAR       &hm LSHIFT RPAR  &kp EXCL  &none               &trans   &sk LALT      &kp LGUI   &trans     &to 0      &kp LEFT   &hm RSHIFT DOWN  &hm RCMD UP  &hm RIGHT_ALT RIGHT  &hm RCTRL MINUS  &kp DOLLAR
&kp LSHFT        &kp AMPERSAND   &kp AT             &kp RS(LEFT_BRACE)  &kp RIGHT_BRACE  &kp PIPE                               &kp HOME      &kp PG_UP                        &kp UNDER  &kp ASTRK        &kp HASH     &kp PERCENT          &kp BSLH         &kp RSHFT
&mo 2            &kp GRAVE       &kp CAPS           &kp LEFT            &kp RIGHT                  &hm LCMD BACKSPACE  &kp DEL  &kp END       &kp PG_DN  &kp ENTER  &kp SPACE             &kp UP           &kp DOWN     &kp LBKT             &kp RBKT         &mo 2
            >;
        };

        wm_layer {
            bindings = <
&trans     &trans  &trans  &trans  &trans  &trans  &trans                                        &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans     &trans  &trans  &trans  &trans  &trans  &trans                                        &trans  &trans  &trans  &trans  &trans  &trans  &trans
&sk LCTRL  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &sk LALT      &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&sk LSHFT  &trans  &trans  &trans  &trans  &trans                  &trans        &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans     &trans  &trans  &trans  &trans          &trans  &trans  &trans        &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
