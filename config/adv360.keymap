#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/rgb.h>

// Just some short versions

#define _PAUSE &kp PAUSE_BREAK

&mt { flavor = "tap-preferred"; };

/ {
    behaviors {
        #include "macros.dtsi"
      #include "version.dtsi"
      #ifndef VERSION_MACRO

        macro_ver: macro_ver {
            compatible = "zmk,behavior-macro";
            label = "macro_version";
            #binding-cells = <0>;
            bindings = <&kp RET>;
        };

        #endif

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        td_mt_0: tap_dance_mt_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "td_mt_0";
            tapping-term-ms = <200>;
            #binding-cells = <0>;
            bindings = <&mt LCMD BACKSPACE>, <&kp BACKSPACE>;

            tapping-term-ms = <310>;
        };

        td_mt_1: tap_dance_mt_1 {
            compatible = "zmk,behavior-tap-dance";
            label = "td_mt_1";
            #binding-cells = <0>;
            bindings = <&mt LCTRL A>, <&kp A>;

            tapping-term-ms = <310>;
        };

        td_mt_2: tap_dance_mt_2 {
            compatible = "zmk,behavior-tap-dance";
            label = "td_mt_2";
            #binding-cells = <0>;
            bindings = <&mt LALT S>, <&kp S>;

            tapping-term-ms = <310>;
        };

        td_mt_3: tap_dance_mt_3 {
            compatible = "zmk,behavior-tap-dance";
            label = "td_mt_3";
            #binding-cells = <0>;
            bindings = <&mt LCMD D>, <&kp D>;

            tapping-term-ms = <310>;
        };

        td_mt_4: tap_dance_mt_4 {
            compatible = "zmk,behavior-tap-dance";
            label = "td_mt_4";
            #binding-cells = <0>;
            bindings = <&mt LSHIFT F>, <&kp F>;

            tapping-term-ms = <310>;
        };

        td_mt_5: tap_dance_mt_5 {
            compatible = "zmk,behavior-tap-dance";
            label = "td_mt_5";
            #binding-cells = <0>;
            bindings = <&mt RCTRL SEMICOLON>, <&kp SEMICOLON>;

            tapping-term-ms = <310>;
        };

        td_mt_6: tap_dance_mt_6 {
            compatible = "zmk,behavior-tap-dance";
            label = "td_mt_6";
            #binding-cells = <0>;
            bindings = <&mt RIGHT_ALT L>, <&kp L>;

            tapping-term-ms = <310>;
        };

        td_mt_7: tap_dance_mt_7 {
            compatible = "zmk,behavior-tap-dance";
            label = "td_mt_7";
            #binding-cells = <0>;
            bindings = <&mt RCMD K>, <&kp K>;

            tapping-term-ms = <310>;
        };

        td_mt_8: tap_dance_mt_8 {
            compatible = "zmk,behavior-tap-dance";
            label = "td_mt_8";
            #binding-cells = <0>;
            bindings = <&mt RSHIFT J>, <&kp J>;

            tapping-term-ms = <310>;
        };
    };

    combos { compatible = "zmk,combos"; };

    macros {
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp EQUAL                &kp N1     &kp N2    &kp N3    &kp N4     &kp N5  &tog 1                                                   &mo 3      &kp N6  &kp N7    &kp N8     &kp N9    &kp N0    &kp MINUS
&kp TAB                  &kp Q      &kp W     &kp E     &kp R      &kp T   &none                                                    &tog 4     &kp Y   &kp U     &kp I      &kp O     &kp P     &kp BSLH
&mt LEFT_CONTROL ESCAPE  &td_mt_1   &td_mt_2  &td_mt_3  &td_mt_4   &kp G   &none     &kp LCTRL  &sk LALT      &kp LGUI   &kp RCTRL  &tog 5     &kp H   &td_mt_8  &td_mt_7   &td_mt_6  &td_mt_5  &kp SQT
&kp LSHFT                &kp Z      &kp X     &kp C     &kp V      &kp B                        &kp HOME      &kp PG_UP                        &kp N   &kp M     &kp COMMA  &kp DOT   &kp FSLH  &kp RSHFT
&mo 2                    &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT          &td_mt_0  &kp DEL    &kp END       &kp PG_DN  &kp ENTER  &kp SPACE          &kp UP    &kp DOWN   &kp LBKT  &kp RBKT  &mo 2
            >;
        };

        keypad {
            bindings = <
&kp EQUAL  &kp N1     &kp N2    &kp N3    &kp N4     &kp N5  &trans                                                   &mo 3      &kp N6  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp MINUS
&kp TAB    &kp Q      &kp W     &kp E     &kp R      &kp T   &none                                                    &none      &kp Y   &kp KP_N7   &kp KP_N8     &kp KP_N9      &kp KP_MINUS     &kp BSLH
&kp ESC    &kp A      &kp S     &kp D     &kp F      &kp G   &none     &kp LCTRL  &kp LALT      &kp LGUI   &kp RCTRL  &none      &kp H   &kp KP_N4   &kp KP_N5     &kp KP_N6      &kp KP_PLUS      &kp SQT
&kp LSHFT  &kp Z      &kp X     &kp C     &kp V      &kp B                        &kp HOME      &kp PG_UP                        &kp N   &kp KP_N1   &kp KP_N2     &kp KP_N3      &kp KP_ENTER     &kp RSHFT
&mo 2      &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT          &kp BSPC  &kp DEL    &kp END       &kp PG_DN  &kp ENTER  &kp KP_N0          &kp UP      &kp DOWN      &kp KP_DOT     &kp RBKT         &mo 2
            >;
        };

        fn {
            bindings = <
&kp F1  &kp F2  &kp F3       &kp F4        &kp F5              &kp F6  &tog 1                                          &mo 3             &kp F7  &kp F8           &kp F9             &kp F10               &kp F11     &kp F12
&trans  &trans  &trans       &trans        &trans              &trans  &none                                           &none             &trans  &trans           &trans             &trans                &trans      &trans
&trans  &trans  &kp C_SLEEP  &trans        &trans              &trans  &none   &trans      &trans      &trans  &trans  &none             &trans  &trans           &trans             &kp C_AL_SCREENSAVER  &trans      &trans
&trans  &trans  &trans       &trans        &trans              &trans                      &trans      &trans                            &trans  &trans           &trans             &trans                &trans      &trans
&trans  &trans  &trans       &kp C_REWIND  &kp C_FAST_FORWARD          &trans  &kp C_MUTE  &trans      &trans  &trans  &kp C_PLAY_PAUSE          &kp C_VOLUME_UP  &kp C_VOLUME_DOWN  &kp C_PREVIOUS        &kp C_NEXT  &trans
            >;
        };

        mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                  &trans                  &none  &none       &none       &none          &none   &none
&none  &none         &none         &trans        &none         &none         &bootloader                                            &bootloader             &none  &none       &none       &none          &trans  &none
&none  &none         &kp C_SLEEP   &none         &none         &none         &none        &none  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none  &none       &none       &kp C_AL_LOCK  &none   &none
&none  &none         &none         &none         &macro_ver    &none                             &none      &none                                           &none  &none       &none       &none          &none   &none
&none  &none         &none         &none         &none                       &none        &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                &bl BL_INC  &bl BL_DEC  &none          &none   &none
            >;
        };

        navigation {
            bindings = <
&trans  &trans  &trans     &trans     &trans     &trans  &trans                                      &trans  &trans      &trans         &trans       &trans     &trans          &trans
&trans  &trans  &trans     &trans     &trans     &trans  &trans                                      &tog 4  &kp INSERT  &kp LC(V)      &kp LC(C)    &kt LC(X)  &kp SLASH       &trans
&trans  &trans  &trans     &mkp MB4   &mkp MB5   &trans  &trans  &trans  &trans      &trans  &trans  &tog 5  &kp LEFT    &kp DOWN       &kp UP       &kp RIGHT  &kp LS(K_REDO)  &trans
&trans  &trans  &mkp LCLK  &mkp MCLK  &mkp RCLK  &trans                  &trans      &trans                  &kp HOME    &kp PAGE_DOWN  &kp PAGE_UP  &kp END    &trans          &trans
&to 2   &trans  &trans     &trans     &trans             &trans  &trans  &trans      &trans  &trans  &trans              &trans         &trans       &trans     &trans          &trans
            >;
        };

        mouse {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans  &trans     &trans     &trans     &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &tog 4  &trans  &trans     &trans     &trans     &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &tog 5  &trans  &mkp MB5   &mkp MB4   &trans     &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                  &trans  &mkp LCLK  &mkp MCLK  &mkp RCLK  &trans  &trans
&to 2   &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans          &trans     &trans     &trans     &trans  &trans
            >;
        };
    };
};
